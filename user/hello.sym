0000000000000000 .text
0000000000000b90 .rodata
0000000000000ca8 .sbss
0000000000000cb0 .bss
0000000000000000 .comment
0000000000000000 .debug_aranges
0000000000000000 .debug_info
0000000000000000 .debug_abbrev
0000000000000000 .debug_line
0000000000000000 .debug_frame
0000000000000000 .debug_str
0000000000000000 .debug_loc
0000000000000000 .debug_ranges
0000000000000000 hello.c
0000000000000000 ulib.c
0000000000000000 printf.c
00000000000003ea putc
000000000000040c printint
0000000000000bf0 digits
0000000000000000 umalloc.c
0000000000000ca8 freep
0000000000000cb0 base
0000000000000000 wrapper.c
00000000000000c4 strcpy
000000000000097c Dup
00000000000006c2 printf
00000000000014a3 __global_pointer$
0000000000000280 memmove
000000000000037a mknod
00000000000003d2 trace
000000000000089c Write
00000000000008d4 Read
000000000000017c gets
000000000000090c Open
0000000000000ca3 __SDATA_BEGIN__
00000000000003b2 getpid
0000000000000312 memcpy
0000000000000780 malloc
00000000000003c2 sleep
0000000000000944 Fstat
00000000000003e2 alarmret
00000000000003da alarm
0000000000000342 pipe
0000000000000028 sayyou
0000000000000352 write
000000000000038a fstat
0000000000000694 fprintf
0000000000000362 kill
00000000000004b6 vprintf
00000000000003a2 chdir
00000000000009b4 Close
000000000000036a exec
000000000000033a wait
0000000000000b36 strstr
000000000000034a read
0000000000000a76 strncmp
0000000000000382 unlink
00000000000002d8 memcmp
000000000000032a fork
0000000000000a36 Stat
0000000000000cc0 __BSS_END__
00000000000003ba sbrk
00000000000003ca uptime
0000000000000ca3 __bss_start
0000000000000136 memset
0000000000000050 main
0000000000000864 Pipe
00000000000009ec Dup2
00000000000000e0 strcmp
00000000000003aa dup
0000000000000000 sayhi
0000000000000ca3 __DATA_BEGIN__
00000000000001f0 stat
0000000000000ca3 _edata
0000000000000cc0 _end
0000000000000392 link
0000000000000332 exit
0000000000000236 atoi
000000000000010c strlen
0000000000000372 open
0000000000000158 strchr
000000000000039a mkdir
000000000000035a close
00000000000006f8 free
