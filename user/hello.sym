0000000000000000 .text
0000000000000bb8 .rodata
0000000000000cd0 .sbss
0000000000000cd8 .bss
0000000000000000 .comment
0000000000000000 .debug_aranges
0000000000000000 .debug_info
0000000000000000 .debug_abbrev
0000000000000000 .debug_line
0000000000000000 .debug_frame
0000000000000000 .debug_str
0000000000000000 .debug_loc
0000000000000000 .debug_ranges
0000000000000000 hello.c
0000000000000000 ulib.c
0000000000000000 printf.c
000000000000040e putc
0000000000000430 printint
0000000000000c18 digits
0000000000000000 umalloc.c
0000000000000cd0 freep
0000000000000cd8 base
0000000000000000 wrapper.c
00000000000000e8 strcpy
00000000000009a0 Dup
00000000000006e6 printf
00000000000014cb __global_pointer$
00000000000002a4 memmove
000000000000039e mknod
00000000000003f6 trace
00000000000008c0 Write
00000000000008f8 Read
00000000000001a0 gets
0000000000000930 Open
0000000000000ccb __SDATA_BEGIN__
00000000000003d6 getpid
0000000000000336 memcpy
00000000000007a4 malloc
00000000000003e6 sleep
0000000000000968 Fstat
0000000000000406 alarmret
00000000000003fe alarm
0000000000000366 pipe
000000000000003a sayyou
0000000000000376 write
00000000000003ae fstat
00000000000006b8 fprintf
0000000000000386 kill
00000000000004da vprintf
00000000000003c6 chdir
00000000000009d8 Close
000000000000038e exec
000000000000035e wait
0000000000000b5a strstr
000000000000036e read
0000000000000a9a strncmp
00000000000003a6 unlink
00000000000002fc memcmp
000000000000034e fork
0000000000000a5a Stat
0000000000000ce8 __BSS_END__
00000000000003de sbrk
00000000000003ee uptime
0000000000000ccb __bss_start
000000000000015a memset
0000000000000074 main
0000000000000888 Pipe
0000000000000a10 Dup2
0000000000000104 strcmp
00000000000003ce dup
0000000000000000 sayhi
0000000000000ccb __DATA_BEGIN__
0000000000000214 stat
0000000000000ccb _edata
0000000000000ce8 _end
00000000000003b6 link
0000000000000356 exit
000000000000025a atoi
0000000000000130 strlen
0000000000000396 open
000000000000017c strchr
00000000000003be mkdir
000000000000037e close
000000000000071c free
